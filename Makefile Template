.PHONY:     		all $(NAME) sanit lib bonus clean fclean re

NAME_LIB			= libft.a
NAME				= LIB_TEST

#Directory
BUILD_DIR  			= build
DIR_BONUS			= bonus
LIB_DIR				=

#Sans bonus
SOURCE		 		= ft_isalpha.c ft_isdigit.c ft_isalnum.c ft_isascii.c ft_isprint.c ft_strlen.c ft_memset.c ft_bzero.c ft_memcpy.c ft_memmove.c ft_strlcpy.c ft_strlcat.c ft_toupper.c ft_tolower.c ft_strchr.c ft_strrchr.c ft_strncmp.c ft_memchr.c ft_memcmp.c ft_strnstr.c ft_atoi.c ft_calloc.c ft_strdup.c ft_substr.c ft_strjoin.c ft_strtrim.c ft_split.c ft_itoa.c ft_strmapi.c ft_striteri.c ft_putchar_fd.c ft_putstr_fd.c ft_putendl_fd.c ft_putnbr_fd.c
OBJECTS			    = $(SOURCE:%.c=$(BUILD_DIR)/%.o)
HEADER				= .

#Avec bonus
BONUS	 			= ft_lstnew.c ft_lstadd_front.c ft_lstsize.c ft_lstlast.c ft_lstadd_back.c ft_lstdelone.c ft_lstclear.c ft_lstiter.c ft_lstmap.c
OBJECTS_BONUS		= $(BONUS:%.c=$(BUILD_DIR)/%.o)
HEADER_BONUS		= bonus/

#Pour les test
TEST_SRC			= main.c 
TEST_OBJECT			= $(BUILD_DIR)/main.o $(OBJECTS) $(OBJECTS_BONUS)

#Option compilation
GCC					= gcc
CFLAGS				= -Wall -Wextra -Werror 
SANITIZE			= $(CFLAGS) -g -fsanitize=address

#Pour faire la lib
SOURCE_LIB		 	= 
OBJECTS_LIB		    = 
HEADER_LIB			= 
LIB 				= ar -crs

#Autres commande
RM 					= rm -rf
CLEAR				= clear


all: $(NAME) Makefile

#Rule for Object
%.o:	%.c
			$(GCC) $(CFLAGS) -I$(HEADER_BONUS) -I$(HEADER) -c $< -o $@

$(BUILD_DIR)/%.o:	%.c
			$(GCC) $(CFLAGS) -I$(HEADER) -c $< -o $@

$(BUILD_DIR)/%.o:	$(DIR_BONUS)/%.c
			$(GCC) $(CFLAGS) -I$(HEADER_BONUS) -c $< -o $@


#Rule for compile
$(NAME): 	clear $(TEST_OBJECT) $(HEADER) Makefile 
			@echo "----Compiling----"
			@$(GCC) $(CFLAGS) $(TEST_OBJECT) -o $(NAME)

sanit: 	$(OBJECTS) $(HEADER) Makefile
			@echo "----Ready for sanitizing ? ----"
			$(GCC) $(SANITIZE) $(OBJECTS) -o $(NAME)


#Rule to make lib
lib:		${OBJECTS} Makefile
			@echo "----Making Lib----"
			@${LIB} ${NAME_LIB} ${OBJECTS}

bonus:	${OBJECTS_BONUS} Makefile
			@echo "----Making Bonus----"
			@${LIB} ${NAME} ${OBJECTS} ${OBJECTS_BONUS}

#Other
clear:
			$(CLEAR)

clean:
			${RM} ${TEST_OBJECT}

fclean:		clean
			${RM} ${NAME}

re:			fclean all