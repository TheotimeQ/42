.PHONY:     		all $(NAME) bonus sanit sanit_bonus lib clean fclean re

LIB_NAME			= libftprintf.a
NAME				= test
HEADER				= ft_printf.h

#Libft
LIBFT				= libft.a
LIB_DIR				= libft/

#Sans bonus
SOURCE		 		= add_zeros.c print_pourc.c ft_print_str.c ft_printf.c print_c.c print_s.c print_p.c print_d.c print_i.c print_u.c print_x.c print_xx.c convert.c
OBJECTS			    = $(SOURCE:%.c=%.o)

#Avec bonus
BONUS	 			= add_zeros.c print_pourc.c check_flag_bonus.c ft_print_str_bonus.c ft_printf.c print_c.c print_s.c print_p.c print_d.c print_i.c print_u.c print_x.c print_xx.c convert.c
OBJECTS_BONUS		= $(BONUS:%.c=%.o)

#Pour les test
TEST_SRC			= main.c 
TEST_OBJECT			= $(TEST_SRC:%.c=%.o)

#Option compilation
GCC					= gcc
CFLAGS				= -Wall -Wextra -Werror 
SANITIZE			= $(CFLAGS) -g -fsanitize=address

#Autres commande
RM 					= rm -rf
CLEAR				= clear
LIB 				= ar -crs
EXTRACT_LIB			= ar -x

all: $(NAME) Makefile

%.o:		%.c
			$(GCC) $(CFLAGS) -include$(HEADER) -I$(LIB_DIR) -c $< -o $@

$(NAME):	lib $(OBJECTS_BONUS) $(LIB_DIR)$(LIBFT) Makefile 
			@cp $(LIB_DIR)$(LIBFT) $(LIB_NAME) 
			${LIB} ${LIB_NAME} ${OBJECTS_BONUS}

bonus:		lib ${OBJECTS_BONUS} $(LIB_DIR)$(LIBFT) Makefile
			@cp $(LIB_DIR)$(LIBFT) $(LIB_NAME) 
			${LIB} ${LIB_NAME} ${OBJECTS_BONUS}

sanit: 		lib $(TEST_OBJECT) $(OBJECTS) $(HEADER) Makefile
			@$(GCC) $(SANITIZE) $(TEST_OBJECT) $(OBJECTS) -o $(NAME) $(LIB_DIR)$(LIBFT)  

sanit_bonus: 	lib $(TEST_OBJECT) $(OBJECTS_BONUS) $(HEADER) Makefile
				@$(GCC) $(SANITIZE) $(TEST_OBJECT) $(OBJECTS_BONUS) -o $(NAME) $(LIB_DIR)$(LIBFT)  

lib:		Makefile
			cd $(LIB_DIR) && make

clean:
			@${RM} ${TEST_OBJECT} $(OBJECTS_BONUS) $(OBJECTS) $(OBJ_LIB)
			@cd $(LIB_DIR) && make clean

fclean:		clean
			@${RM} ${LIB_NAME}
			@${RM} ${NAME}
			@cd $(LIB_DIR) && make fclean

re:			fclean all